{"ast":null,"code":"import React,{useState}from'react';import\"./App.css\";import{numbers,upperCaseLetters,lowerCaseLetters,specialCharacters}from'./Character';import{toast,ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{COPY_Fail,COPY_SUCCESS}from'./message';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[password,setPassword]=useState(\"\");const[passwordLength,setPasswordLength]=useState(26);const[includeUpperCase,setIncludeUpperCase]=useState(false);const[includeLowerCase,setIncludeLowerCase]=useState(false);const[includeNumbers,setIncludeNumbers]=useState(false);const[includeSymbols,setIncludeSymbols]=useState(false);const handleGeneratePassword=()=>{if(!includeUpperCase&&!includeLowerCase&&!includeNumbers&&!includeSymbols){notify(\"To generate password you must select atleast one checkbox\",true);}else{let characterList=\"\";if(includeNumbers){characterList=characterList+numbers;}if(includeUpperCase){characterList=characterList+upperCaseLetters;}if(includeLowerCase){characterList=characterList+lowerCaseLetters;}if(includeSymbols){characterList=characterList+specialCharacters;}setPassword(createPassword(characterList));notify(\"Password is generated successfully\",false);}};const createPassword=characterList=>{let password=\"\";const characterListLength=characterList.length;for(let i=0;i<passwordLength;i++){const characterIndex=Math.round(Math.random()*characterListLength);password=password+characterList.charAt(characterIndex);}return password;};const copyToClipboard=password=>{navigator.clipboard.writeText(password);};const notify=function(message){let hasError=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(hasError){toast.error(message,{position:\"top-center\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}else{toast(message,{position:\"top-center\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}};const handleCopyPassword=e=>{if(password===\"\"){notify(COPY_Fail,true);}else{copyToClipboard(password);notify(COPY_SUCCESS);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"generator\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"generator__header\",children:\"Password Generator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"generator__password\",children:[/*#__PURE__*/_jsx(\"h3\",{children:password}),/*#__PURE__*/_jsx(\"button\",{className:\"copy__btn\",children:/*#__PURE__*/_jsx(\"i\",{onClick:handleCopyPassword,className:\"far fa-clipboard\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password-strength\",children:\"Password length\"}),/*#__PURE__*/_jsx(\"input\",{className:\"pw\",defaultValue:passwordLength,onChange:e=>setPasswordLength(e.target.value),type:\"number\",id:\"password-stregth\",name:\"password-strength\",max:\"26\",min:\"8\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"uppercase-letters\",children:\"Add Uppercase Letters\"}),/*#__PURE__*/_jsx(\"input\",{checked:includeUpperCase,onChange:e=>setIncludeUpperCase(e.target.checked),type:\"checkbox\",id:\"uppercase-letters\",name:\"uppercase-letters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lowercase-letters\",children:\"Add Lowercase Letters\"}),/*#__PURE__*/_jsx(\"input\",{checked:includeLowerCase,onChange:e=>setIncludeLowerCase(e.target.checked),type:\"checkbox\",id:\"lowercase-letters\",name:\"lowercase-letters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"include-numbers\",children:\"Include Numbers\"}),/*#__PURE__*/_jsx(\"input\",{checked:includeNumbers,onChange:e=>setIncludeNumbers(e.target.checked),type:\"checkbox\",id:\"include-numbers\",name:\"include-numbers\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"include-symbols\",children:\"Include Symbols\"}),/*#__PURE__*/_jsx(\"input\",{checked:includeSymbols,onChange:e=>setIncludeSymbols(e.target.checked),type:\"checkbox\",id:\"include-symbols\",name:\"include-symbols\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGeneratePassword,className:\"generator__btn\",children:\"Generate Password\"}),/*#__PURE__*/_jsx(ToastContainer,{position:\"top-center\",autoClose:5000,hideProgressBar:false,newestOnTop:false,closeOnClick:true,rtl:false,pauseOnFocusLoss:true,draggable:true,pauseOnHover:true})]})})});};export default App;","map":{"version":3,"names":["React","useState","numbers","upperCaseLetters","lowerCaseLetters","specialCharacters","toast","ToastContainer","COPY_Fail","COPY_SUCCESS","jsx","_jsx","jsxs","_jsxs","App","password","setPassword","passwordLength","setPasswordLength","includeUpperCase","setIncludeUpperCase","includeLowerCase","setIncludeLowerCase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","handleGeneratePassword","notify","characterList","createPassword","characterListLength","length","i","characterIndex","Math","round","random","charAt","copyToClipboard","navigator","clipboard","writeText","message","hasError","arguments","undefined","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","handleCopyPassword","e","className","children","onClick","htmlFor","defaultValue","onChange","target","value","type","id","name","max","min","checked","newestOnTop","rtl","pauseOnFocusLoss"],"sources":["C:/Users/moury/Desktop/random-password-generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./App.css\"\r\nimport { numbers, upperCaseLetters, lowerCaseLetters, specialCharacters } from './Character'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { COPY_Fail, COPY_SUCCESS } from './message';\r\n\r\nconst App = () => {\r\n  const [password, setPassword] = useState(\"\")\r\n  const [passwordLength, setPasswordLength] = useState(26)\r\n  const [includeUpperCase, setIncludeUpperCase] = useState(false)\r\n  const [includeLowerCase, setIncludeLowerCase] = useState(false)\r\n  const [includeNumbers, setIncludeNumbers] = useState(false)\r\n  const [includeSymbols, setIncludeSymbols] = useState(false)\r\n  const handleGeneratePassword = () => {\r\n    if (!includeUpperCase && !includeLowerCase && !includeNumbers && !includeSymbols) {\r\n      notify(\"To generate password you must select atleast one checkbox\", true)\r\n    }\r\n    else {\r\n      let characterList = \"\"\r\n      if (includeNumbers) {\r\n        characterList = characterList + numbers\r\n      }\r\n      if (includeUpperCase) {\r\n        characterList = characterList + upperCaseLetters\r\n      }\r\n      if (includeLowerCase) {\r\n        characterList = characterList + lowerCaseLetters\r\n      }\r\n      if (includeSymbols) {\r\n        characterList = characterList + specialCharacters\r\n      }\r\n      setPassword(createPassword(characterList))\r\n      notify(\"Password is generated successfully\", false)\r\n    }\r\n\r\n\r\n  }\r\n  const createPassword = (characterList) => {\r\n    let password = \"\"\r\n    const characterListLength = characterList.length\r\n    for (let i = 0; i < passwordLength; i++) {\r\n      const characterIndex = Math.round(Math.random() * characterListLength)\r\n      password = password + characterList.charAt(characterIndex)\r\n    }\r\n    return password\r\n  }\r\n  const copyToClipboard = (password) => {\r\n\r\n    navigator.clipboard.writeText(password)\r\n  }\r\n  const notify = (message, hasError = false) => {\r\n    if (hasError) {\r\n      toast.error(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    else {\r\n      toast(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n  }\r\n  const handleCopyPassword = (e) => {\r\n    if (password === \"\") {\r\n      notify(COPY_Fail, true)\r\n    }\r\n    else {\r\n      copyToClipboard(password)\r\n      notify(COPY_SUCCESS)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"generator\">\r\n          <h2 className=\"generator__header\">\r\n           Password Generator\r\n          </h2>\r\n          <div className=\"generator__password\">\r\n            <h3 >{password}</h3>\r\n            <button className=\"copy__btn\">\r\n              <i onClick={handleCopyPassword} className=\"far fa-clipboard\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password-strength\">Password length</label>\r\n            <input className=\"pw\" defaultValue={passwordLength} onChange={(e) => setPasswordLength(e.target.value)} type=\"number\" id=\"password-stregth\" name=\"password-strength\" max=\"26\" min=\"8\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"uppercase-letters\">Add Uppercase Letters</label>\r\n            <input checked={includeUpperCase} onChange={(e) => setIncludeUpperCase(e.target.checked)} type=\"checkbox\" id=\"uppercase-letters\" name=\"uppercase-letters\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lowercase-letters\">Add Lowercase Letters</label>\r\n            <input checked={includeLowerCase} onChange={(e) => setIncludeLowerCase(e.target.checked)} type=\"checkbox\" id=\"lowercase-letters\" name=\"lowercase-letters\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-numbers\">Include Numbers</label>\r\n            <input checked={includeNumbers} onChange={(e) => setIncludeNumbers(e.target.checked)} type=\"checkbox\" id=\"include-numbers\" name=\"include-numbers\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-symbols\">Include Symbols</label>\r\n            <input checked={includeSymbols} onChange={(e) => setIncludeSymbols(e.target.checked)} type=\"checkbox\" id=\"include-symbols\" name=\"include-symbols\" />\r\n          </div>\r\n          <button onClick={handleGeneratePassword} className=\"generator__btn\">\r\n            Generate Password\r\n          </button>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}